library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
all_sum_team <- all_players %>%
group_by(Season_team, Fantasy_yr)%>%
select(Season_team, Fantasy_yr, FPTS)%>%
summarize(ttl_FPTS = sum(FPTS))%>%
arrange(desc(Season_team))%>%
filter (Season_team != "NA")
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
sos_rank <- SOS %>%
group_by(Team, Year)%>%
select(Team, Year, Last)%>%
arrange(Team,Year)%>%
filter (Team != "NO TEAM FA")
#summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule i.e 1 is the hardest
print(sos_rank)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
sos_rank$Year <- as.numeric(sos_rank$Year)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(lm.beta)
model_1 <- lm( ttl_FPTS ~ Last, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_1)
#print(all_sum_team)
conf_intervals_model_1 <- confint(model_1)
print(conf_intervals_model_1)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
QB_stats<-read_xlsx("QB_Merged_Fantasy_Football_Statistics.xlsx")
RB_stats<-read_xlsx("RB_Merged_Fantasy_Football_Statistics.xlsx")
WR_stats<-read_xlsx("WR_Merged_Fantasy_Football_Statistics.xlsx")
TE_stats<-read_xlsx("TE_Merged_Fantasy_Football_Statistics.xlsx")
head(QB_stats)
head(RB_stats)
head(WR_stats)
head(TE_stats)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
SOS<-read_xlsx("Strength of Schedule.xlsx")
tail(SOS)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
team_stand_22<-read_xlsx("2022_team_standings.xlsx")
head(team_stand_22)
library(dplyr)
# Group data by Player and calculate summary statistics
QB_summary_data <- QB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(QB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
RB_summary_data <- RB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(RB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
WR_summary_data <- WR_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(WR_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
TE_summary_data <- TE_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(TE_summary_data)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)#%>%
#filter (Season_team == "ARI")
print(all_players)
all_sum_team <- all_players %>%
group_by(Season_team, Fantasy_yr)%>%
select(Season_team, Fantasy_yr, FPTS)%>%
summarize(ttl_FPTS = sum(FPTS))%>%
arrange(desc(Season_team))%>%
filter (Season_team != "NA")
print(all_sum_team)
sos_rank <- SOS %>%
group_by(Team, Year)%>%
select(Team, Year, Last)%>%
arrange(Team,Year)%>%
filter (Team != "NO TEAM FA")
#summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule i.e 1 is the hardest
print(sos_rank)
library(dplyr)
sos_rank$Year <- as.numeric(sos_rank$Year)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(lm.beta)
model_1 <- lm( ttl_FPTS ~ Last, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_1)
#print(all_sum_team)
conf_intervals_model_1 <- confint(model_1)
print(conf_intervals_model_1)
all_22_team <- all_players %>%
filter (Fantasy_yr == "2022", !is.na(Season_team))%>%
group_by(Season_team) %>%
summarise(total_FPTS = sum(FPTS))%>%
left_join(team_stand_22, by = c("Season_team" = "Team"))
print(all_22_team)
library(lm.beta)
model_2 <- lm( total_FPTS ~ Pct, data = all_22_team)
summary(model_2)
standardized_betas_model_2 <- lm.beta(model_2)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_2)
#print(all_sum_team)
conf_intervals_model_2 <- confint(model_2)
print(conf_intervals_model_2)
library(dplyr)
library(ggplot2)
# Create the heatmap using ggplot2
heatmap <-
ggplot(all_players, aes(x = Posit, y = FPTS, fill = FPTS)) +
geom_tile(color = "black ") +
scale_fill_gradient(low = "orange", high = "blue") +
theme_minimal() +
labs(x = "Position", y = "Fantasy Points",
title = "Heatmap of Scores by Player Avg 2019-2022")
print(heatmap)
QB_filtered_players <-
subset(QB_summary_data, Season_team != "NO TEAM FA" &
FPTS >= 100)
RB_filtered_players <- subset(RB_summary_data, Season_team != "NO TEAM FA")
WR_filtered_players <- subset(WR_summary_data, Season_team != "NO TEAM FA")
TE_filtered_players <- subset(TE_summary_data, Season_team != "NO TEAM FA")
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = FPTS, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm")
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
sos_rank$Year <- as.numeric(sos_rank$Year)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
sos_rank$Year <- as.numeric(sos_rank$Year)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
QB_stats<-read_xlsx("QB_Merged_Fantasy_Football_Statistics.xlsx")
RB_stats<-read_xlsx("RB_Merged_Fantasy_Football_Statistics.xlsx")
WR_stats<-read_xlsx("WR_Merged_Fantasy_Football_Statistics.xlsx")
TE_stats<-read_xlsx("TE_Merged_Fantasy_Football_Statistics.xlsx")
head(QB_stats)
head(RB_stats)
head(WR_stats)
head(TE_stats)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
SOS<-read_xlsx("Strength of Schedule.xlsx")
tail(SOS)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
team_stand_22<-read_xlsx("2022_team_standings.xlsx")
head(team_stand_22)
library(dplyr)
# Group data by Player and calculate summary statistics
QB_summary_data <- QB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(QB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
RB_summary_data <- RB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(RB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
WR_summary_data <- WR_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(WR_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
TE_summary_data <- TE_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(TE_summary_data)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)#%>%
#filter (Season_team == "ARI")
print(all_players)
all_sum_team <- all_players %>%
group_by(Season_team, Fantasy_yr)%>%
select(Season_team, Fantasy_yr, FPTS)%>%
summarize(ttl_FPTS = sum(FPTS))%>%
arrange(desc(Season_team))%>%
filter (Season_team != "NA")
print(all_sum_team)
sos_rank <- SOS %>%
group_by(Team, Year)%>%
select(Team, Year, Last)%>%
arrange(Team,Year)%>%
filter (Team != "NO TEAM FA")
#summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule i.e 1 is the hardest
print(sos_rank)
library(dplyr)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(lm.beta)
model_1 <- lm( ttl_FPTS ~ Last, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_1)
#print(all_sum_team)
conf_intervals_model_1 <- confint(model_1)
print(conf_intervals_model_1)
all_22_team <- all_players %>%
filter (Fantasy_yr == "2022", !is.na(Season_team))%>%
group_by(Season_team) %>%
summarise(total_FPTS = sum(FPTS))%>%
left_join(team_stand_22, by = c("Season_team" = "Team"))
print(all_22_team)
library(lm.beta)
model_2 <- lm( total_FPTS ~ Pct, data = all_22_team)
summary(model_2)
standardized_betas_model_2 <- lm.beta(model_2)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_2)
#print(all_sum_team)
conf_intervals_model_2 <- confint(model_2)
print(conf_intervals_model_2)
library(dplyr)
library(ggplot2)
# Create the heatmap using ggplot2
heatmap <-
ggplot(all_players, aes(x = Posit, y = FPTS, fill = FPTS)) +
geom_tile(color = "black ") +
scale_fill_gradient(low = "orange", high = "blue") +
theme_minimal() +
labs(x = "Position", y = "Fantasy Points",
title = "Heatmap of Scores by Player Avg 2019-2022")
print(heatmap)
QB_filtered_players <-
subset(QB_summary_data, Season_team != "NO TEAM FA" &
FPTS >= 100)
RB_filtered_players <- subset(RB_summary_data, Season_team != "NO TEAM FA")
WR_filtered_players <- subset(WR_summary_data, Season_team != "NO TEAM FA")
TE_filtered_players <- subset(TE_summary_data, Season_team != "NO TEAM FA")
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = FPTS, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm")
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
QB_stats<-read_xlsx("QB_Merged_Fantasy_Football_Statistics.xlsx")
RB_stats<-read_xlsx("RB_Merged_Fantasy_Football_Statistics.xlsx")
WR_stats<-read_xlsx("WR_Merged_Fantasy_Football_Statistics.xlsx")
TE_stats<-read_xlsx("TE_Merged_Fantasy_Football_Statistics.xlsx")
head(QB_stats)
head(RB_stats)
head(WR_stats)
head(TE_stats)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
SOS<-read_xlsx("Strength of Schedule.xlsx")
tail(SOS)
library(readxl)
#library(tidyverse)
setwd("~/DSC520/Week 10")
team_stand_22<-read_xlsx("2022_team_standings.xlsx")
head(team_stand_22)
library(dplyr)
# Group data by Player and calculate summary statistics
QB_summary_data <- QB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(QB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
RB_summary_data <- RB_stats %>%
group_by(Player,Posit, Fantasy_yr,Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
summarize(FPTS)
#arrange(desc(Avg_fant_pts))
print(RB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
WR_summary_data <- WR_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(WR_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
TE_summary_data <- TE_stats %>%
group_by(Player,Posit , Fantasy_yr, Season_team) %>%
#summarize(Avg_fant_pts = round(mean(FPTS))) %>%
#arrange(desc(Avg_fant_pts))
summarize(FPTS)
print(TE_summary_data)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)#%>%
#filter (Season_team == "ARI")
print(all_players)
all_sum_team <- all_players %>%
group_by(Season_team, Fantasy_yr)%>%
select(Season_team, Fantasy_yr, FPTS)%>%
summarize(ttl_FPTS = sum(FPTS))%>%
arrange(desc(Season_team))%>%
filter (Season_team != "NA")
print(all_sum_team)
sos_rank <- SOS %>%
group_by(Team, Year)%>%
select(Team, Year, Last)%>%
arrange(Team,Year)%>%
filter (Team != "NO TEAM FA")
#summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule i.e 1 is the hardest
print(sos_rank)
library(dplyr)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(lm.beta)
model_1 <- lm( ttl_FPTS ~ Last, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_1)
#print(all_sum_team)
conf_intervals_model_1 <- confint(model_1)
print(conf_intervals_model_1)
all_22_team <- all_players %>%
filter (Fantasy_yr == "2022", !is.na(Season_team))%>%
group_by(Season_team) %>%
summarise(total_FPTS = sum(FPTS))%>%
left_join(team_stand_22, by = c("Season_team" = "Team"))
print(all_22_team)
library(lm.beta)
model_2 <- lm( total_FPTS ~ Pct, data = all_22_team)
summary(model_2)
standardized_betas_model_2 <- lm.beta(model_2)
#all_sum_team$std_beta_sos_rank <- standardized_betas_model_1[2]
print(standardized_betas_model_2)
#print(all_sum_team)
conf_intervals_model_2 <- confint(model_2)
print(conf_intervals_model_2)
library(dplyr)
library(ggplot2)
# Create the heatmap using ggplot2
heatmap <-
ggplot(all_players, aes(x = Posit, y = FPTS, fill = FPTS)) +
geom_tile(color = "black ") +
scale_fill_gradient(low = "orange", high = "blue") +
theme_minimal() +
labs(x = "Position", y = "Fantasy Points",
title = "Heatmap of Scores by Player Avg 2019-2022")
print(heatmap)
QB_filtered_players <-
subset(QB_summary_data, Season_team != "NO TEAM FA" &
FPTS >= 100)
RB_filtered_players <- subset(RB_summary_data, Season_team != "NO TEAM FA")
WR_filtered_players <- subset(WR_summary_data, Season_team != "NO TEAM FA")
TE_filtered_players <- subset(TE_summary_data, Season_team != "NO TEAM FA")
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = FPTS, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm")
summary(all_su,_team)
summary(all_sum_team)
str(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year")) %>%
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
all_22_team <- all_players %>%
filter (Fantasy_yr == "2022", !is.na(Season_team))%>%
group_by(Season_team) %>%
summarise(total_FPTS = sum(FPTS))%>%
left_join(team_stand_22, by = c("Season_team" = "Team"))
print(all_22_team)
library(readxl)
library(dplyr)
library(lm.beta)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
all_sum_team <- all_sum_team %>%
left_join(sos_rank, by = c("Season_team" = "Team", "Fantasy_yr" = "Year"))
#select(-ranking, -Last.x)  # Removing duplicate columns
print(all_sum_team)
