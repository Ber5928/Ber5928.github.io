group_by(Rank) %>%
summarize(Avg_SOS  = mean(last))
print(sos_avg_rank)
head(SOS)
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(last))
print(sos_avg_rank)
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(sum(last)))
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = sum(last))
sos_avg_rank <- SOS %>%
group_by(Rank) %>%
summarize(Avg_SOS  = mean(last))
print(sos_avg_rank)
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(Avg_SOS  = mean(last))
print(sos_avg_rank)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(Avg_SOS  = sum(last))
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = mean(avg_sos))
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = mean(last))
print(sos_avg_rank)
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = mean(ranking))
print(sos_avg_rank)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
print(sos_avg_rank)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# Merge 'all_sum_team' with 'sos_avg_rank' based on the team names
all_sum_team <- left_join(all_sum_team, sos_avg_rank, by = c("Current_team" = "Team"))
print(all_sum_team)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# Merge 'all_sum_team' with 'sos_avg_rank' based on the team names
all_sum_team <- left_join(all_sum_team, sos_avg_rank, by = c("Current_team" = "Team"))
print(all_sum_team)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule
print(all_sum_team)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
# Merge 'all_sum_team' with 'sos_avg_rank' based on the team names
all_sum_team <- left_join(all_sum_team, sos_avg_rank, by = c("Current_team" = "Team"))
print(all_sum_team)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule
print(all_sum_team)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule
print(sos_avg_rank)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
print(all_sum_team)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
print(all_players)
all_players
print(n=)
print(n= ...)
all_sum_team
'print (n =...)'
tail (all_sum_team)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)
print(all_players)
library(dplyr)
# Group data by Player and calculate summary statistics
WR_summary_data <- WR_stats %>%
group_by(Player,Posit, Current_team) %>%
summarize(Avg_fant_pts = round(mean(FPTS))) %>%
arrange(desc(Avg_fant_pts))
print(WR_summary_data)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)
print(all_players)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
print(all_sum_team)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
library(readxl)
library(tidyverse)
setwd("~/DSC520/Week 9")
SOS<-read_xlsx("Strength of Schedule.xlsx")
head(SOS)
tail(SOS)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
print(all_sum_team)
sos_avg_rank <- SOS %>%
group_by(Team) %>%
summarize(avg_sos  = round(mean(ranking)))
# the higher the ranking the harder the schedule
print(sos_avg_rank)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
pring(all_sum_team)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
print(all_sum_team)
model_1 <- lm( ttl_avg_fant_pts ~ avg_sos_rank, data = all_sum_team)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_avg_fant_pts =sum(Avg_fant_pts))
print(all_sum_team)
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_avg_fant_pts =sum(avg_fant_pts))
all_sum_team <- all_players %>%
group_by(Current_team) %>%
summarize(ttl_Avg_fant_pts =sum(Avg_fant_pts))
print(all_sum_team)
model_1 <- lm( ttl_Avg_fant_pts ~ avg_sos_rank, data = all_sum_team)
all_sum_team <- all_sum_team %>% mutate(avg_sos_rank = sos_avg_rank$avg_sos)
print(all_sum_team)
model_1 <- lm( ttl_Avg_fant_pts ~ avg_sos_rank, data = all_sum_team)
summary(model_1)
model_1 <- lm( ttl_Avg_fant_pts ~ avg_sos_rank, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
library(lm.beta)
model_1 <- lm( ttl_Avg_fant_pts ~ avg_sos_rank, data = all_sum_team)
summary(model_1)
standardized_betas_model_1 <- lm.beta(model_1)
print(standardized_betas_model_1)
library(dplyr)
# Group data by Player and calculate summary statistics
RB_summary_data <- RB_stats %>%
group_by(Player,Posit, Current_team) %>%
summarize(Avg_fant_pts = round(mean(FPTS))) %>%
arrange(desc(Avg_fant_pts))
print(RB_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
WR_summary_data <- WR_stats %>%
group_by(Player,Posit, Current_team) %>%
summarize(Avg_fant_pts = round(mean(FPTS))) %>%
arrange(desc(Avg_fant_pts))
print(WR_summary_data)
library(dplyr)
# Group data by Player and calculate summary statistics
TE_summary_data <- TE_stats %>%
group_by(Player,Posit, Current_team) %>%
summarize(Avg_fant_pts = round(mean(FPTS))) %>%
arrange(desc(Avg_fant_pts))
print(TE_summary_data)
all_players <- rbind(QB_summary_data, RB_summary_data, WR_summary_data, TE_summary_data)
print(all_players)
library(dplyr)
library(ggplot2)
# Create the heatmap using ggplot2
heatmap <- ggplot(all_players, aes(x = Posit, y = Avg_fant_pts, fill = Avg_fant_pts)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(x = "Position", y = "Average Fantasy Points", title = "Heatmap of Scores by Player and Game")
print(heatmap)
library(dplyr)
library(ggplot2)
ggplot(all_players, aes(x = player)) +
geom_line(aes(y = Player, color = "Player")) +
labs(title = "Player Performance Over Seasons",
x = "player",
y = "Avg_fant_pts",
color = "Player") +
theme_minimal()
library(ggplot2)
ggplot(all_players, aes(x = player)) +
geom_line(aes(y = Player, color = "Player")) +
labs(title = "Player Performance Over Seasons",
x = "player",
y = "Avg_fant_pts",
color = "Player") +
theme_minimal()
library(ggplot2)
ggplot(all_players, aes(x = PlayerName, y = Avg_fant_pts)) +
geom_line() +
labs(title = "Average Fantasy Points by Player",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_line() +
labs(title = "Average Fantasy Points by Player",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_boxplot() +
labs(title = "Average Fantasy Points by Player",
x = "Player Name",
y = "Average Fantasy Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(all_players, aes(x = Player_Name, y = Avg_fant_pts, fill = Player_Name)) +
geom_area() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal()
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts, fill = Player_Name)) +
geom_area() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal()
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts, fill = Player)) +
geom_area() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal()
library(ggplot2)
filtered_players <- subset(all_players, current_team != "NO TEAM FA")
filtered_players <- subset(all_players, current_team != "NO TEAM FA")
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts, fill = Player)) +
geom_area() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal()
filtered_players <- subset(all_players, current_team != "NO TEAM FA")
filtered_players <- subset(all_players, Current_team != "NO TEAM FA")
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts, fill = Player)) +
geom_area() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal()
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_line() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
filtered_players <- subset(all_players, Current_team != "NO TEAM FA", Avg_fant_pts >= 100)
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_line() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(all_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
filtered_players <- subset(all_players, Current_team != "NO TEAM FA", Avg_fant_pts >= 100)
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
filtered_players <- subset(all_players, Current_team != "NO TEAM FA", Avg_fant_pts >= 100)
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
filtered_players <- subset(all_players, Current_team != "NO TEAM FA")
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
filtered_players <- subset(all_players, Current_team != "NO TEAM FA" & Avg_fant_pts >=100)
library(ggplot2)
ggplot(filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points")
knitr::stitch('assignment_09_ReppetoBrian.r')
setwd("~/DSC520/Week 9")
knitr::stitch('assignment_09_ReppetoBrian.r')
knitr::stitch('assignment_09_2_ReppetoBrian.r')
QB_filtered_players <- subset(QB_summary_data, Current_team != "NO TEAM FA")
RB_filtered_players <- subset(RB_summary_data, Current_team != "NO TEAM FA")
WR_filtered_players <- subset(WR_summary_data, Current_team != "NO TEAM FA")
TE_filtered_players <- subset(TE_summary_data, Current_team != "NO TEAM FA")
library(ggplot2)
ggplot(QB_filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for QB",
x = "Player Name",
y = "Average Fantasy Points")
QB_filtered_players <- subset(QB_summary_data, Current_team != "NO TEAM FA" & Avg_fant_pts >=100)
RB_filtered_players <- subset(RB_summary_data, Current_team != "NO TEAM FA")
WR_filtered_players <- subset(WR_summary_data, Current_team != "NO TEAM FA")
TE_filtered_players <- subset(TE_summary_data, Current_team != "NO TEAM FA")
library(ggplot2)
ggplot(QB_filtered_players, aes(x = Player, y = Avg_fant_pts)) +
geom_point() +
labs(title = "Average Fantasy Points for QB",
x = "Player Name",
y = "Average Fantasy Points")
library(ggplot2)
ggplot(QB_filtered_players, aes(x = Avg_fant_pts)) +
geom_histogram(binwidth = 2, fill = "blue", color = "black") +
labs(title = "QB Average Fantasy Points",
x = "Average Fantasy Points",
y = "Frequency") +
theme_minimal()
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 2)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =8))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points for Players",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =6))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =6))
library(dplyr)
library(ggplot2)
# Create the heatmap using ggplot2
heatmap <- ggplot(all_players, aes(x = Posit, y = Avg_fant_pts, fill = Avg_fant_pts)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(x = "Position", y = "Average Fantasy Points", title = "Heatmap of Scores by Player Avg 2019-2022")
print(heatmap)
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =6))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "cm")
library(ggplot2)
ggplot(QB_filtered_players , aes(x = Player, y = Avg_fant_pts, group = .5)) +
geom_line() +
geom_point() +
labs(title = "Average Fantasy Points QB's >=100 pts",
x = "Player Name",
y = "Average Fantasy Points") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =5))
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm")
